WSGISocketPrefix /var/run/wsgi
<VirtualHost 0.0.0.0:80>

    ServerName ckan

    # CSW endpoint provided by pycsw
    # use one wsgi script and set configuration
    # based on request URI
    
    # default CSW, collection level metadata
    WSGIScriptAlias /csw /etc/ckan/pycsw.wsgi
    SetEnvIf Request_URI "/csw" PYCSW_CONFIG=/etc/ckan/pycsw-collection.cfg
    
    # full CSW, all metadata
    WSGIScriptAlias /csw-all /etc/ckan/pycsw.wsgi
    SetEnvIf Request_URI "/csw-all" PYCSW_CONFIG=/etc/ckan/pycsw-all.cfg
    
    # this is our app
    WSGIScriptAlias / /etc/ckan/apache.wsgi

    # pass authorization info on (needed for rest api)
    WSGIPassAuthorization On

    # Deploy as a daemon (avoids conflicts between CKAN instances)
    WSGIDaemonProcess demo display-name=demo processes=2 threads=15

    WSGIProcessGroup demo

    # fix Cross-Frame Scripting (XFS) vulnerability
    Header add X-Frame-Options "SAMEORIGIN"

    ErrorLog /var/log/httpd/ckan.error.log
    CustomLog /var/log/httpd/ckan.custom.log combined
    
    RewriteEngine on

    RewriteRule ^/api/rest/dataset$ api/action/package_search [R]
    RewriteRule ^/api/1/rest/dataset$ api/3/action/package_search [R]
    RewriteRule ^/api/2/rest/dataset$ api/3/action/package_search [R]

    RewriteRule ^/api/action/package_list$ api/action/package_search [R]
    RewriteRule ^/api/3/action/package_list$ api/3/action/package_search [R]

    RewriteRule ^/api/action/current_package_list_with_resources api/action/package_search [R]
    RewriteRule ^/api/3/action/current_package_list_with_resources api/3/action/package_search [R]

</VirtualHost>

