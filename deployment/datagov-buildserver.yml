---
- hosts: build
  user: root
  vars_prompt:
   - name: version
     prompt: "Ckan Version"
     private: False
   - name: iteration
     prompt: "Iteration"
     private: False
   - name: branch
     prompt: "geodatagov Branch"
     private: False
  tasks:
    - name: remove old code
      action: file path=/usr/lib/ckan/src state=absent
    - name: install epel
      action: command creates=/etc/yum.repos.d/epel.repo rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
    - name: make sure packages are installed
      action: yum pkg={{ item }} state=installed
      with_items:
        - htop
        - atool
        - rubygems
        - python-virtualenv
        - python-setuptools
        - git
        - python-devel
        - ruby-devel
        - postgresql-libs
        - postgresql-devel
        - libxml2-devel
        - libxslt-devel
        - postgresql
        - rpmdevtools
        - gcc
        - gcc-c++
        - make
        - bison
        - httpd
        - createrepo
        - mod_wsgi
        - tomcat6
        - cronie
    - name: install fpm
      action: command gem install -v 0.4.21 fpm creates=/usr/bin/fpm

    - name: get ckan version
      action: git repo=https://github.com/GSA/ckan.git dest=/usr/lib/ckan/src/ckan version=release-datagov

    - name: get pip
      action: easy_install name=https://pypi.python.org/packages/source/p/pip/pip-1.3.1.tar.gz

    - name: install requirements and make virtualenv
      action: pip requirements=/usr/lib/ckan/src/ckan/pip-requirements.txt virtualenv=/usr/lib/ckan/ virtualenv_site_packages=yes

    - name: run setup.py develop for ckan
      action: command chdir=/usr/lib/ckan/src/ckan/ ../../bin/python setup.py develop

    - name: make sure pip is 1.3.1
      action: command chdir=/usr/lib/ckan/src/ckan/ ../../bin/easy_install https://pypi.python.org/packages/source/p/pip/pip-1.3.1.tar.gz

    - name: get geodatagov
      action: git repo=https://github.com/GSA/ckanext-geodatagov.git dest=/usr/lib/ckan/src/ckanext-geodatagov version={{ branch }}

    - name: install requirements for geodatagov
      action: pip requirements=/usr/lib/ckan/src/ckanext-geodatagov/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: run setup.py develop for geodatagov
      action: command chdir=/usr/lib/ckan/src/ckanext-geodatagov/ ../../bin/python setup.py develop

    - name: install requirements for harvest
      action: pip requirements=/usr/lib/ckan/src/ckanext-harvest/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: install requirements for spatial
      action: pip requirements=/usr/lib/ckan/src/ckanext-spatial/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: install requirements for archiver
      action: pip requirements=/usr/lib/ckan/src/ckanext-archiver/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: install requirements for qa
      action: pip requirements=/usr/lib/ckan/src/ckanext-qa/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: get datajson extension
      action: git repo=https://github.com/GSA/ckanext-datajson dest=/usr/lib/ckan/src/ckanext-datajson version=catalog

    - name: install requirements for datajson
      action: pip requirements=/usr/lib/ckan/src/ckanext-datajson/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: run setup.py develop for datajson
      action: command chdir=/usr/lib/ckan/src/ckanext-datajson/ ../../bin/python setup.py develop

    - name: remove psycopg2
      action: pip name=psycopg2 virtualenv=/usr/lib/ckan/ state=absent

    - name: install supervisor
      action: pip name=supervisor virtualenv=/usr/lib/ckan/

    - name: remove old repo
      action: file path=/var/www/ckan-repo/master state=absent

    - name: create directories
      action: file path={{ item }} state=directory
      with_items:
        - /etc/ckan
        - /var/www/ckan-repo/master

    - name: default apache removed
      action: file path=/etc/httpd/conf.d/welcome.conf state=absent

    - name: copy all needed files
      action: copy src={{ item }} dest=/{{ item }}
      with_items:
        - etc/ckan/who.ini
        - etc/ckan/apache.wsgi
        - etc/ckan/production.ini
        - etc/supervisord.conf
        - etc/httpd/conf.d/ckan.conf
        - etc/httpd/conf.d/ckan-repo.conf
        - etc/cron.d/ckan-harvest
        - etc/cron.daily/remove_old_sessions
        - etc/init/supervisor.conf
        - var/lib/tomcat6/webapps/fgdc2iso.war

    - name: copy executables
      action: copy src={{ item }} dest=/{{ item }} mode=744
      with_items:
        - usr/bin/ckan
        - tmp/before_combined.sh
        - tmp/after_web.sh
        - tmp/after_harvester.sh

    - name: create superviserctl symlink
      action: file src=/usr/lib/ckan/bin/supervisorctl dest=/usr/bin/supervisorctl state=link

######################################################

#pycsw setup
    - name: get pycsw version
      action: git repo=https://github.com/geopython/pycsw.git dest=/usr/lib/ckan/src/pycsw version=1.10.1

    - name: run setup build for pycsw
      action: command chdir=/usr/lib/ckan/src/pycsw/ ../../bin/python setup.py build

    - name: run setup install for pycsw
      action: command chdir=/usr/lib/ckan/src/pycsw/ ../../bin/python setup.py install

    - name: install pyproj
      action: pip name=pyproj virtualenv=/usr/lib/ckan/

    - name: install geolinks
      action: pip name=geolinks virtualenv=/usr/lib/ckan/

    - name: copy pycsw configuration files
      action: copy src={{item}} dest=/{{item}} mode=644
      with_items:
        - etc/ckan/pycsw-all.cfg
        - etc/ckan/pycsw-collection.cfg
        - etc/ckan/pycsw.wsgi
        - etc/cron.d/ckan-pycsw
        - usr/lib/ckan/bin/pycsw-db-admin.py
#//pycsw setup

    - name: restart apache
      action: service name=httpd state=restarted

    - name: build rpm main 
      action: command chdir=/var/www/ckan-repo/master/ fpm -t rpm -s dir --description='geo.data.gov web frontend' --before-install=/tmp/before_combined.sh --after-install=/tmp/after_web.sh -n geo.data.gov.web --iteration {{ iteration }} -v {{ version }} -d memcached -d postgresql -d httpd -d mod_wsgi -d geos -d cronie -d python-psycopg2 -d xmlsec1 -d xmlsec1-openssl -d swig -d m2crypto --config-files /etc/ckan/who.ini --config-files /etc/ckan/production.ini --config-files /etc/ckan/pycsw-all.cfg --config-files /etc/ckan/pycsw-collection.cfg /etc/httpd/conf.d/ckan.conf /usr/bin/ckan /usr/lib/ckan/ /etc/ckan/ /etc/cron.daily/remove_old_sessions

    - name: build rpm harvester 
      action: command chdir=/var/www/ckan-repo/master/ fpm -t rpm -s dir --description='geo.data.gov harvester frontend' --before-install=/tmp/before_combined.sh --after-install=/tmp/after_harvester.sh -n geo.data.gov.harvester --iteration {{ iteration }} -v {{ version }} -d geos -d postgresql -d redis -d python-psycopg2 -d tomcat6 -d java-openjdk -d libxslt -d libxml2 -d xmlsec1 -d xmlsec1-openssl -d swig -d m2crypto -d cronie --config-files /etc/ckan/who.ini --config-files /etc/ckan/production.ini --config-files /etc/ckan/pycsw-all.cfg --config-files /etc/ckan/pycsw-collection.cfg /usr/bin/ckan /usr/lib/ckan/ /etc/ckan/ /etc/init/supervisor.conf /etc/supervisord.conf /usr/bin/supervisorctl /var/lib/tomcat6/webapps/fgdc2iso.war /etc/cron.d/ckan-harvest /etc/cron.d/ckan-pycsw

    - name: create repo
      action: command createrepo /var/www/ckan-repo/master/


